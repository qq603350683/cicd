name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env: 
      MYSQL_HOST: 127.0.0.1
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: test_micro
    steps:
    - name: Set up MySQL
      run: |
        sudo /etc/init.d/mysql start
        mysql -e 'CREATE DATABASE ${{ env.MYSQL_DATABASE }};' -u${{ env.MYSQL_USER }} -p${{ env.MYSQL_PASSWORD }}
    - uses: actions/checkout@v2
 
    # 检测代码风格
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.29
    
    # 防止SQL注入，密码泄露
    - name: Run Gosec Security Scanner
      run: |
        export PATH=$PATH:$(go env GOPATH)/bin
        go get github.com/securego/gosec/cmd/gosec
        cd user; gosec ./

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Build User
      run: cd user; go build

    - name: Test User
      run: cd user; go test
